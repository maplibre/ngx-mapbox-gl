{"version":3,"sources":["node_modules/@angular/material/fesm2022/tooltip.mjs","node_modules/@angular/material/fesm2022/paginator.mjs","projects/showcase/src/app/demo/examples/ngx-cluster-html.component.ts"],"sourcesContent":["import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst _c0 = [\"tooltip\"];\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-tooltip-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n  }\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition({\n    scrollThrottle: SCROLL_THROTTLE_MS\n  });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500\n  };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-tooltip-default-options', {\n  providedIn: 'root',\n  factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nlet MatTooltip = /*#__PURE__*/(() => {\n  class MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      if (value !== this._position) {\n        this._position = value;\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n          this._tooltipInstance?.show(0);\n          this._overlayRef.updatePosition();\n        }\n      }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n      return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n      this._positionAtOrigin = coerceBooleanProperty(value);\n      this._detach();\n      this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n      // If tooltip is disabled, hide immediately.\n      if (this._disabled) {\n        this.hide(0);\n      } else {\n        this._setupPointerEnterEventsIfNeeded();\n      }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n      return this._showDelay;\n    }\n    set showDelay(value) {\n      this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n      return this._hideDelay;\n    }\n    set hideDelay(value) {\n      this._hideDelay = coerceNumberProperty(value);\n      if (this._tooltipInstance) {\n        this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n      }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n      return this._message;\n    }\n    set message(value) {\n      this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n      // If the message is not a string (e.g. number), convert it to a string and trim it.\n      // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n      // away the string-conversion: https://github.com/angular/components/issues/20684\n      this._message = value != null ? String(value).trim() : '';\n      if (!this._message && this._isTooltipVisible()) {\n        this.hide(0);\n      } else {\n        this._setupPointerEnterEventsIfNeeded();\n        this._updateTooltipMessage();\n        this._ngZone.runOutsideAngular(() => {\n          // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n          // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n          // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n          // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n          Promise.resolve().then(() => {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n          });\n        });\n      }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n      return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n      this._tooltipClass = value;\n      if (this._tooltipInstance) {\n        this._setTooltipClass(this._tooltipClass);\n      }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n      this._overlay = _overlay;\n      this._elementRef = _elementRef;\n      this._scrollDispatcher = _scrollDispatcher;\n      this._viewContainerRef = _viewContainerRef;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._ariaDescriber = _ariaDescriber;\n      this._focusMonitor = _focusMonitor;\n      this._dir = _dir;\n      this._defaultOptions = _defaultOptions;\n      this._position = 'below';\n      this._positionAtOrigin = false;\n      this._disabled = false;\n      this._viewInitialized = false;\n      this._pointerExitEventsInitialized = false;\n      this._tooltipComponent = TooltipComponent;\n      this._viewportMargin = 8;\n      this._cssClassPrefix = 'mat-mdc';\n      /**\n       * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n       * uses a long press gesture to show and hide, however it can conflict with the native browser\n       * gestures. To work around the conflict, Angular Material disables native gestures on the\n       * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n       * elements). The different values for this option configure the touch event handling as follows:\n       * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n       *   browser gestures on particular elements. In particular, it allows text selection on inputs\n       *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n       * - `on` - Enables touch gestures for all elements and disables native\n       *   browser gestures with no exceptions.\n       * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n       *   showing on touch devices.\n       */\n      this.touchGestures = 'auto';\n      this._message = '';\n      /** Manually-bound passive event listeners. */\n      this._passiveListeners = [];\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      this._scrollStrategy = scrollStrategy;\n      this._document = _document;\n      if (_defaultOptions) {\n        this._showDelay = _defaultOptions.showDelay;\n        this._hideDelay = _defaultOptions.hideDelay;\n        if (_defaultOptions.position) {\n          this.position = _defaultOptions.position;\n        }\n        if (_defaultOptions.positionAtOrigin) {\n          this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n        }\n        if (_defaultOptions.touchGestures) {\n          this.touchGestures = _defaultOptions.touchGestures;\n        }\n      }\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n        }\n      });\n      this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n      // This needs to happen after view init so the initial values for all inputs have been set.\n      this._viewInitialized = true;\n      this._setupPointerEnterEventsIfNeeded();\n      this._focusMonitor.monitor(this._elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n        // Note that the focus monitor runs outside the Angular zone.\n        if (!origin) {\n          this._ngZone.run(() => this.hide(0));\n        } else if (origin === 'keyboard') {\n          this._ngZone.run(() => this.show());\n        }\n      });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n      const nativeElement = this._elementRef.nativeElement;\n      clearTimeout(this._touchstartTimeout);\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._tooltipInstance = null;\n      }\n      // Clean up the event listeners set in the constructor\n      this._passiveListeners.forEach(([event, listener]) => {\n        nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n      });\n      this._passiveListeners.length = 0;\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n      this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n      if (this.disabled || !this.message || this._isTooltipVisible()) {\n        this._tooltipInstance?._cancelPendingAnimations();\n        return;\n      }\n      const overlayRef = this._createOverlay(origin);\n      this._detach();\n      this._portal = this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n      const instance = this._tooltipInstance = overlayRef.attach(this._portal).instance;\n      instance._triggerElement = this._elementRef.nativeElement;\n      instance._mouseLeaveHideDelay = this._hideDelay;\n      instance.afterHidden().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n      this._setTooltipClass(this._tooltipClass);\n      this._updateTooltipMessage();\n      instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n      const instance = this._tooltipInstance;\n      if (instance) {\n        if (instance.isVisible()) {\n          instance.hide(delay);\n        } else {\n          instance._cancelPendingAnimations();\n          this._detach();\n        }\n      }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n      this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n      return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n      if (this._overlayRef) {\n        const existingStrategy = this._overlayRef.getConfig().positionStrategy;\n        if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n          return this._overlayRef;\n        }\n        this._detach();\n      }\n      const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n      // Create connected position strategy that listens for scroll events to reposition.\n      const strategy = this._overlay.position().flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(false).withViewportMargin(this._viewportMargin).withScrollableContainers(scrollableAncestors);\n      strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n        this._updateCurrentPositionClass(change.connectionPair);\n        if (this._tooltipInstance) {\n          if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n            // After position changes occur and the overlay is clipped by\n            // a parent scrollable then close the tooltip.\n            this._ngZone.run(() => this.hide(0));\n          }\n        }\n      });\n      this._overlayRef = this._overlay.create({\n        direction: this._dir,\n        positionStrategy: strategy,\n        panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n        scrollStrategy: this._scrollStrategy()\n      });\n      this._updatePosition(this._overlayRef);\n      this._overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n      this._overlayRef.outsidePointerEvents().pipe(takeUntil(this._destroyed)).subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n      this._overlayRef.keydownEvents().pipe(takeUntil(this._destroyed)).subscribe(event => {\n        if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._ngZone.run(() => this.hide(0));\n        }\n      });\n      if (this._defaultOptions?.disableTooltipInteractivity) {\n        this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n      }\n      return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n      if (this._overlayRef && this._overlayRef.hasAttached()) {\n        this._overlayRef.detach();\n      }\n      this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n      const position = overlayRef.getConfig().positionStrategy;\n      const origin = this._getOrigin();\n      const overlay = this._getOverlayPosition();\n      position.withPositions([this._addOffset({\n        ...origin.main,\n        ...overlay.main\n      }), this._addOffset({\n        ...origin.fallback,\n        ...overlay.fallback\n      })]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n      const offset = UNBOUNDED_ANCHOR_GAP;\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      if (position.originY === 'top') {\n        position.offsetY = -offset;\n      } else if (position.originY === 'bottom') {\n        position.offsetY = offset;\n      } else if (position.originX === 'start') {\n        position.offsetX = isLtr ? -offset : offset;\n      } else if (position.originX === 'end') {\n        position.offsetX = isLtr ? offset : -offset;\n      }\n      return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      const position = this.position;\n      let originPosition;\n      if (position == 'above' || position == 'below') {\n        originPosition = {\n          originX: 'center',\n          originY: position == 'above' ? 'top' : 'bottom'\n        };\n      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n        originPosition = {\n          originX: 'start',\n          originY: 'center'\n        };\n      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n        originPosition = {\n          originX: 'end',\n          originY: 'center'\n        };\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getMatTooltipInvalidPositionError(position);\n      }\n      const {\n        x,\n        y\n      } = this._invertPosition(originPosition.originX, originPosition.originY);\n      return {\n        main: originPosition,\n        fallback: {\n          originX: x,\n          originY: y\n        }\n      };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      const position = this.position;\n      let overlayPosition;\n      if (position == 'above') {\n        overlayPosition = {\n          overlayX: 'center',\n          overlayY: 'bottom'\n        };\n      } else if (position == 'below') {\n        overlayPosition = {\n          overlayX: 'center',\n          overlayY: 'top'\n        };\n      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n        overlayPosition = {\n          overlayX: 'end',\n          overlayY: 'center'\n        };\n      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n        overlayPosition = {\n          overlayX: 'start',\n          overlayY: 'center'\n        };\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getMatTooltipInvalidPositionError(position);\n      }\n      const {\n        x,\n        y\n      } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n      return {\n        main: overlayPosition,\n        fallback: {\n          overlayX: x,\n          overlayY: y\n        }\n      };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n      // Must wait for the message to be painted to the tooltip so that the overlay can properly\n      // calculate the correct positioning based on the size of the text.\n      if (this._tooltipInstance) {\n        this._tooltipInstance.message = this.message;\n        this._tooltipInstance._markForCheck();\n        this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n          if (this._tooltipInstance) {\n            this._overlayRef.updatePosition();\n          }\n        });\n      }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n      if (this._tooltipInstance) {\n        this._tooltipInstance.tooltipClass = tooltipClass;\n        this._tooltipInstance._markForCheck();\n      }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n      if (this.position === 'above' || this.position === 'below') {\n        if (y === 'top') {\n          y = 'bottom';\n        } else if (y === 'bottom') {\n          y = 'top';\n        }\n      } else {\n        if (x === 'end') {\n          x = 'start';\n        } else if (x === 'start') {\n          x = 'end';\n        }\n      }\n      return {\n        x,\n        y\n      };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n      const {\n        overlayY,\n        originX,\n        originY\n      } = connectionPair;\n      let newPosition;\n      // If the overlay is in the middle along the Y axis,\n      // it means that it's either before or after.\n      if (overlayY === 'center') {\n        // Note that since this information is used for styling, we want to\n        // resolve `start` and `end` to their real values, otherwise consumers\n        // would have to remember to do it themselves on each consumption.\n        if (this._dir && this._dir.value === 'rtl') {\n          newPosition = originX === 'end' ? 'left' : 'right';\n        } else {\n          newPosition = originX === 'start' ? 'left' : 'right';\n        }\n      } else {\n        newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n      }\n      if (newPosition !== this._currentPosition) {\n        const overlayRef = this._overlayRef;\n        if (overlayRef) {\n          const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n          overlayRef.removePanelClass(classPrefix + this._currentPosition);\n          overlayRef.addPanelClass(classPrefix + newPosition);\n        }\n        this._currentPosition = newPosition;\n      }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n      // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n      if (this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length) {\n        return;\n      }\n      // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n      // first tap from firing its click event or can cause the tooltip to open for clicks.\n      if (this._platformSupportsMouseEvents()) {\n        this._passiveListeners.push(['mouseenter', event => {\n          this._setupPointerExitEventsIfNeeded();\n          let point = undefined;\n          if (event.x !== undefined && event.y !== undefined) {\n            point = event;\n          }\n          this.show(undefined, point);\n        }]);\n      } else if (this.touchGestures !== 'off') {\n        this._disableNativeGesturesIfNecessary();\n        this._passiveListeners.push(['touchstart', event => {\n          const touch = event.targetTouches?.[0];\n          const origin = touch ? {\n            x: touch.clientX,\n            y: touch.clientY\n          } : undefined;\n          // Note that it's important that we don't `preventDefault` here,\n          // because it can prevent click events from firing on the element.\n          this._setupPointerExitEventsIfNeeded();\n          clearTimeout(this._touchstartTimeout);\n          const DEFAULT_LONGPRESS_DELAY = 500;\n          this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n        }]);\n      }\n      this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n      if (this._pointerExitEventsInitialized) {\n        return;\n      }\n      this._pointerExitEventsInitialized = true;\n      const exitListeners = [];\n      if (this._platformSupportsMouseEvents()) {\n        exitListeners.push(['mouseleave', event => {\n          const newTarget = event.relatedTarget;\n          if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n            this.hide();\n          }\n        }], ['wheel', event => this._wheelListener(event)]);\n      } else if (this.touchGestures !== 'off') {\n        this._disableNativeGesturesIfNecessary();\n        const touchendListener = () => {\n          clearTimeout(this._touchstartTimeout);\n          this.hide(this._defaultOptions.touchendHideDelay);\n        };\n        exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n      }\n      this._addListeners(exitListeners);\n      this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n      listeners.forEach(([event, listener]) => {\n        this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n      });\n    }\n    _platformSupportsMouseEvents() {\n      return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n      if (this._isTooltipVisible()) {\n        const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n        const element = this._elementRef.nativeElement;\n        // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n        // won't fire if the user scrolls away using the wheel without moving their cursor. We\n        // work around it by finding the element under the user's cursor and closing the tooltip\n        // if it's not the trigger.\n        if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n          this.hide();\n        }\n      }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n      const gestures = this.touchGestures;\n      if (gestures !== 'off') {\n        const element = this._elementRef.nativeElement;\n        const style = element.style;\n        // If gestures are set to `auto`, we don't disable text selection on inputs and\n        // textareas, because it prevents the user from typing into them on iOS Safari.\n        if (gestures === 'on' || element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA') {\n          style.userSelect = style.msUserSelect = style.webkitUserSelect = style.MozUserSelect = 'none';\n        }\n        // If we have `auto` gestures and the element uses native HTML dragging,\n        // we don't set `-webkit-user-drag` because it prevents the native behavior.\n        if (gestures === 'on' || !element.draggable) {\n          style.webkitUserDrag = 'none';\n        }\n        style.touchAction = 'none';\n        style.webkitTapHighlightColor = 'transparent';\n      }\n    }\n    static {\n      this.ɵfac = function MatTooltip_Factory(t) {\n        return new (t || MatTooltip)(i0.ɵɵdirectiveInject(i1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i3.AriaDescriber), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i4.Directionality), i0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTooltip,\n        selectors: [[\"\", \"matTooltip\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-tooltip-trigger\"],\n        hostVars: 2,\n        hostBindings: function MatTooltip_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tooltip-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          position: [i0.ɵɵInputFlags.None, \"matTooltipPosition\", \"position\"],\n          positionAtOrigin: [i0.ɵɵInputFlags.None, \"matTooltipPositionAtOrigin\", \"positionAtOrigin\"],\n          disabled: [i0.ɵɵInputFlags.None, \"matTooltipDisabled\", \"disabled\"],\n          showDelay: [i0.ɵɵInputFlags.None, \"matTooltipShowDelay\", \"showDelay\"],\n          hideDelay: [i0.ɵɵInputFlags.None, \"matTooltipHideDelay\", \"hideDelay\"],\n          touchGestures: [i0.ɵɵInputFlags.None, \"matTooltipTouchGestures\", \"touchGestures\"],\n          message: [i0.ɵɵInputFlags.None, \"matTooltip\", \"message\"],\n          tooltipClass: [i0.ɵɵInputFlags.None, \"matTooltipClass\", \"tooltipClass\"]\n        },\n        exportAs: [\"matTooltip\"],\n        standalone: true\n      });\n    }\n  }\n  return MatTooltip;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nlet TooltipComponent = /*#__PURE__*/(() => {\n  class TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      /* Whether the tooltip text overflows to multiple lines */\n      this._isMultiline = false;\n      /** Whether interactions on the page should close the tooltip */\n      this._closeOnInteraction = false;\n      /** Whether the tooltip is currently visible. */\n      this._isVisible = false;\n      /** Subject for notifying that the tooltip has been hidden from the view */\n      this._onHide = new Subject();\n      /** Name of the show animation and the class that toggles it. */\n      this._showAnimation = 'mat-mdc-tooltip-show';\n      /** Name of the hide animation and the class that toggles it. */\n      this._hideAnimation = 'mat-mdc-tooltip-hide';\n      this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n      // Cancel the delayed hide if it is scheduled\n      if (this._hideTimeoutId != null) {\n        clearTimeout(this._hideTimeoutId);\n      }\n      this._showTimeoutId = setTimeout(() => {\n        this._toggleVisibility(true);\n        this._showTimeoutId = undefined;\n      }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n      // Cancel the delayed show if it is scheduled\n      if (this._showTimeoutId != null) {\n        clearTimeout(this._showTimeoutId);\n      }\n      this._hideTimeoutId = setTimeout(() => {\n        this._toggleVisibility(false);\n        this._hideTimeoutId = undefined;\n      }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n      return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n      return this._isVisible;\n    }\n    ngOnDestroy() {\n      this._cancelPendingAnimations();\n      this._onHide.complete();\n      this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n      if (this._closeOnInteraction) {\n        this.hide(0);\n      }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n      this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({\n      relatedTarget\n    }) {\n      if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n        if (this.isVisible()) {\n          this.hide(this._mouseLeaveHideDelay);\n        } else {\n          this._finalizeAnimation(false);\n        }\n      }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n      this._isMultiline = this._isTooltipMultiline();\n      this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n      const rect = this._elementRef.nativeElement.getBoundingClientRect();\n      return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({\n      animationName\n    }) {\n      if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n        this._finalizeAnimation(animationName === this._showAnimation);\n      }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n      if (this._showTimeoutId != null) {\n        clearTimeout(this._showTimeoutId);\n      }\n      if (this._hideTimeoutId != null) {\n        clearTimeout(this._hideTimeoutId);\n      }\n      this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n      if (toVisible) {\n        this._closeOnInteraction = true;\n      } else if (!this.isVisible()) {\n        this._onHide.next();\n      }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n      // We set the classes directly here ourselves so that toggling the tooltip state\n      // isn't bound by change detection. This allows us to hide it even if the\n      // view ref has been detached from the CD tree.\n      const tooltip = this._tooltip.nativeElement;\n      const showClass = this._showAnimation;\n      const hideClass = this._hideAnimation;\n      tooltip.classList.remove(isVisible ? hideClass : showClass);\n      tooltip.classList.add(isVisible ? showClass : hideClass);\n      this._isVisible = isVisible;\n      // It's common for internal apps to disable animations using `* { animation: none !important }`\n      // which can break the opening sequence. Try to detect such cases and work around them.\n      if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n        const styles = getComputedStyle(tooltip);\n        // Use `getPropertyValue` to avoid issues with property renaming.\n        if (styles.getPropertyValue('animation-duration') === '0s' || styles.getPropertyValue('animation-name') === 'none') {\n          this._animationsDisabled = true;\n        }\n      }\n      if (isVisible) {\n        this._onShow();\n      }\n      if (this._animationsDisabled) {\n        tooltip.classList.add('_mat-animation-noopable');\n        this._finalizeAnimation(isVisible);\n      }\n    }\n    static {\n      this.ɵfac = function TooltipComponent_Factory(t) {\n        return new (t || TooltipComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TooltipComponent,\n        selectors: [[\"mat-tooltip-component\"]],\n        viewQuery: function TooltipComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tooltip = _t.first);\n          }\n        },\n        hostAttrs: [\"aria-hidden\", \"true\"],\n        hostVars: 2,\n        hostBindings: function TooltipComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function TooltipComponent_mouseleave_HostBindingHandler($event) {\n              return ctx._handleMouseLeave($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"zoom\", ctx.isVisible() ? 1 : null);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 4,\n        vars: 4,\n        consts: [[\"tooltip\", \"\"], [1, \"mdc-tooltip\", \"mdc-tooltip--shown\", \"mat-mdc-tooltip\", 3, \"animationend\", \"ngClass\"], [1, \"mdc-tooltip__surface\", \"mdc-tooltip__surface-animation\"]],\n        template: function TooltipComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1, 0);\n            i0.ɵɵlistener(\"animationend\", function TooltipComponent_Template_div_animationend_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleAnimationEnd($event));\n            });\n            i0.ɵɵelementStart(2, \"div\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-tooltip--multiline\", ctx._isMultiline);\n            i0.ɵɵproperty(\"ngClass\", ctx.tooltipClass);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.message);\n          }\n        },\n        dependencies: [NgClass],\n        styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return TooltipComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: /*#__PURE__*/trigger('state', [\n  /*#__PURE__*/\n  // TODO(crisbeto): these values are based on MDC's CSS.\n  // We should be able to use their styles directly once we land #19432.\n  state('initial, void, hidden', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), /*#__PURE__*/state('visible', /*#__PURE__*/style({\n    transform: 'scale(1)'\n  })), /*#__PURE__*/transition('* => visible', /*#__PURE__*/animate('150ms cubic-bezier(0, 0, 0.2, 1)')), /*#__PURE__*/transition('* => hidden', /*#__PURE__*/animate('75ms cubic-bezier(0.4, 0, 1, 1)'))])\n};\nlet MatTooltipModule = /*#__PURE__*/(() => {\n  class MatTooltipModule {\n    static {\n      this.ɵfac = function MatTooltipModule_Factory(t) {\n        return new (t || MatTooltipModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatTooltipModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule]\n      });\n    }\n  }\n  return MatTooltipModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nfunction MatPaginator_Conditional_2_Conditional_3_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageSizeOption_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pageSizeOption_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pageSizeOption_r3, \" \");\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 13)(1, \"mat-select\", 15);\n    i0.ɵɵlistener(\"selectionChange\", function MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1._changePageSize($event.value));\n    });\n    i0.ɵɵrepeaterCreate(2, MatPaginator_Conditional_2_Conditional_3_For_3_Template, 2, 2, \"mat-option\", 16, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r1._formFieldAppearance)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.pageSize)(\"disabled\", ctx_r1.disabled)(\"aria-labelledby\", ctx_r1._pageSizeLabelId)(\"panelClass\", ctx_r1.selectConfig.panelClass || \"\")(\"disableOptionCentering\", ctx_r1.selectConfig.disableOptionCentering);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx_r1._displayedPageSizeOptions);\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\nfunction MatPaginator_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatPaginator_Conditional_2_Conditional_3_Template, 4, 7, \"mat-form-field\", 13)(4, MatPaginator_Conditional_2_Conditional_4_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1._pageSizeLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1._intl.itemsPerPageLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(3, ctx_r1._displayedPageSizeOptions.length > 1 ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(4, ctx_r1._displayedPageSizeOptions.length <= 1 ? 4 : -1);\n  }\n}\nfunction MatPaginator_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.firstPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 7);\n    i0.ɵɵelement(2, \"path\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\nfunction MatPaginator_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.lastPage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 7);\n    i0.ɵɵelement(2, \"path\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r1._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._nextButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.lastPageLabel);\n  }\n}\nlet MatPaginatorIntl = /*#__PURE__*/(() => {\n  class MatPaginatorIntl {\n    constructor() {\n      /**\n       * Stream to emit from when labels are changed. Use this to notify components when the labels have\n       * changed after initialization.\n       */\n      this.changes = new Subject();\n      /** A label for the page size selector. */\n      this.itemsPerPageLabel = 'Items per page:';\n      /** A label for the button that increments the current page. */\n      this.nextPageLabel = 'Next page';\n      /** A label for the button that decrements the current page. */\n      this.previousPageLabel = 'Previous page';\n      /** A label for the button that moves to the first page. */\n      this.firstPageLabel = 'First page';\n      /** A label for the button that moves to the last page. */\n      this.lastPageLabel = 'Last page';\n      /** A label for the range of items within the current page and the length of the whole list. */\n      this.getRangeLabel = (page, pageSize, length) => {\n        if (length == 0 || pageSize == 0) {\n          return `0 of ${length}`;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return `${startIndex + 1} – ${endIndex} of ${length}`;\n      };\n    }\n    static {\n      this.ɵfac = function MatPaginatorIntl_Factory(t) {\n        return new (t || MatPaginatorIntl)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatPaginatorIntl,\n        factory: MatPaginatorIntl.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatPaginatorIntl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nlet MatPaginator = /*#__PURE__*/(() => {\n  class MatPaginator {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n      return this._pageIndex;\n    }\n    set pageIndex(value) {\n      this._pageIndex = Math.max(value || 0, 0);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n      return this._length;\n    }\n    set length(value) {\n      this._length = value || 0;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n      return this._pageSize;\n    }\n    set pageSize(value) {\n      this._pageSize = Math.max(value || 0, 0);\n      this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n      return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n      this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n      this._updateDisplayedPageSizeOptions();\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n      this._intl = _intl;\n      this._changeDetectorRef = _changeDetectorRef;\n      /** ID for the DOM node containing the paginator's items per page label. */\n      this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n      this._isInitialized = false;\n      this._initializedStream = new ReplaySubject(1);\n      this._pageIndex = 0;\n      this._length = 0;\n      this._pageSizeOptions = [];\n      /** Whether to hide the page size selection UI from the user. */\n      this.hidePageSize = false;\n      /** Whether to show the first/last buttons UI to the user. */\n      this.showFirstLastButtons = false;\n      /** Used to configure the underlying `MatSelect` inside the paginator. */\n      this.selectConfig = {};\n      /** Whether the paginator is disabled. */\n      this.disabled = false;\n      /** Event emitted when the paginator changes the page size or page index. */\n      this.page = new EventEmitter();\n      /** Emits when the paginator is initialized. */\n      this.initialized = this._initializedStream;\n      this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n      if (defaults) {\n        const {\n          pageSize,\n          pageSizeOptions,\n          hidePageSize,\n          showFirstLastButtons\n        } = defaults;\n        if (pageSize != null) {\n          this._pageSize = pageSize;\n        }\n        if (pageSizeOptions != null) {\n          this._pageSizeOptions = pageSizeOptions;\n        }\n        if (hidePageSize != null) {\n          this.hidePageSize = hidePageSize;\n        }\n        if (showFirstLastButtons != null) {\n          this.showFirstLastButtons = showFirstLastButtons;\n        }\n      }\n      this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n      this._isInitialized = true;\n      this._updateDisplayedPageSizeOptions();\n      this._initializedStream.next();\n    }\n    ngOnDestroy() {\n      this._initializedStream.complete();\n      this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n      if (!this.hasNextPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.pageIndex + 1;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.pageIndex - 1;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n      // hasPreviousPage being false implies at the start\n      if (!this.hasPreviousPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = 0;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n      // hasNextPage being false implies at the end\n      if (!this.hasNextPage()) {\n        return;\n      }\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = this.getNumberOfPages() - 1;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n      return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n      const maxPageIndex = this.getNumberOfPages() - 1;\n      return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n      if (!this.pageSize) {\n        return 0;\n      }\n      return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n      // Current page needs to be updated to reflect the new page size. Navigate to the page\n      // containing the previous page's first item.\n      const startIndex = this.pageIndex * this.pageSize;\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n      this.pageSize = pageSize;\n      this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n      return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n      return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n      if (!this._isInitialized) {\n        return;\n      }\n      // If no page size is provided, use the first page size option or the default page size.\n      if (!this.pageSize) {\n        this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n      }\n      this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n      if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n        this._displayedPageSizeOptions.push(this.pageSize);\n      }\n      // Sort the numbers using a number-specific sort function.\n      this._displayedPageSizeOptions.sort((a, b) => a - b);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n      this.page.emit({\n        previousPageIndex,\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize,\n        length: this.length\n      });\n    }\n    static {\n      this.ɵfac = function MatPaginator_Factory(t) {\n        return new (t || MatPaginator)(i0.ɵɵdirectiveInject(MatPaginatorIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatPaginator,\n        selectors: [[\"mat-paginator\"]],\n        hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-paginator\"],\n        inputs: {\n          color: \"color\",\n          pageIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"pageIndex\", \"pageIndex\", numberAttribute],\n          length: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"length\", \"length\", numberAttribute],\n          pageSize: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"pageSize\", \"pageSize\", numberAttribute],\n          pageSizeOptions: \"pageSizeOptions\",\n          hidePageSize: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hidePageSize\", \"hidePageSize\", booleanAttribute],\n          showFirstLastButtons: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute],\n          selectConfig: \"selectConfig\",\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          page: \"page\"\n        },\n        exportAs: [\"matPaginator\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        decls: 14,\n        vars: 14,\n        consts: [[1, \"mat-mdc-paginator-outer-container\"], [1, \"mat-mdc-paginator-container\"], [1, \"mat-mdc-paginator-page-size\"], [1, \"mat-mdc-paginator-range-actions\"], [\"aria-live\", \"polite\", 1, \"mat-mdc-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-previous\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-next\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [1, \"mat-mdc-paginator-page-size-label\"], [1, \"mat-mdc-paginator-page-size-select\", 3, \"appearance\", \"color\"], [1, \"mat-mdc-paginator-page-size-value\"], [\"hideSingleSelectionIndicator\", \"\", 3, \"selectionChange\", \"value\", \"disabled\", \"aria-labelledby\", \"panelClass\", \"disableOptionCentering\"], [3, \"value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n        template: function MatPaginator_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵtemplate(2, MatPaginator_Conditional_2_Template, 5, 4, \"div\", 2);\n            i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4);\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, MatPaginator_Conditional_6_Template, 3, 5, \"button\", 5);\n            i0.ɵɵelementStart(7, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n              return ctx.previousPage();\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(8, \"svg\", 7);\n            i0.ɵɵelement(9, \"path\", 8);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(10, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n              return ctx.nextPage();\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(11, \"svg\", 7);\n            i0.ɵɵelement(12, \"path\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(13, MatPaginator_Conditional_13_Template, 3, 5, \"button\", 11);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(2, !ctx.hidePageSize ? 2 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(6, ctx.showFirstLastButtons ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n            i0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n            i0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(13, ctx.showFirstLastButtons ? 13 : -1);\n          }\n        },\n        dependencies: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n        styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatPaginator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatPaginatorModule = /*#__PURE__*/(() => {\n  class MatPaginatorModule {\n    static {\n      this.ɵfac = function MatPaginatorModule_Factory(t) {\n        return new (t || MatPaginatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatPaginatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_PAGINATOR_INTL_PROVIDER],\n        imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator]\n      });\n    }\n  }\n  return MatPaginatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import {\n  Component,\n  Input,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  afterNextRender,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  MatPaginator,\n  PageEvent,\n  MatPaginatorModule,\n} from '@angular/material/paginator';\nimport {\n  MapComponent,\n  GeoJSONSourceComponent,\n  PopupComponent,\n  MarkersForClustersComponent,\n  PointDirective,\n  ClusterPointDirective,\n} from '@maplibre/ngx-maplibre-gl';\nimport { MatListModule } from '@angular/material/list';\nimport { NgIf, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'showcase-cluster-popup',\n  template: `\n    <mat-list>\n      <mat-list-item *ngFor=\"let leaf of leaves\">\n        {{ leaf.properties['Primary ID'] }}\n      </mat-list-item>\n    </mat-list>\n    <mat-paginator\n      [length]=\"selectedCluster.properties?.point_count\"\n      [pageSize]=\"5\"\n      (page)=\"changePage($event)\"\n    ></mat-paginator>\n  `,\n  standalone: true,\n  imports: [MatListModule, NgFor, MatPaginatorModule],\n})\nexport class ClusterPopupComponent implements OnChanges {\n  @Input() selectedCluster: { geometry: GeoJSON.Point; properties: any };\n  @Input() clusterComponent: GeoJSONSourceComponent;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  leaves: GeoJSON.Feature<GeoJSON.Geometry>[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.changePage();\n    if (changes.selectedCluster && !changes.selectedCluster.isFirstChange()) {\n      this.paginator.firstPage();\n    }\n  }\n\n  async changePage(pageEvent?: PageEvent) {\n    let offset = 0;\n    if (pageEvent) {\n      offset = pageEvent.pageIndex * 5;\n    }\n    this.leaves = await this.clusterComponent.getClusterLeaves(\n      this.selectedCluster.properties!.cluster_id,\n      5,\n      offset,\n    );\n  }\n}\n\n/**\n * Remember: mgl-layer are way faster than html markers\n * Html markers are fine if you don't have lots of points\n * Try to draw your point with a mgl-layer before using html markers\n * For a compromise, look at cluster-html example, which use only html markers for cluster points\n */\n\n@Component({\n  selector: 'showcase-demo',\n  template: `\n    <mgl-map\n      [style]=\"\n        'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL'\n      \"\n      [zoom]=\"[3]\"\n      [center]=\"[-103.59179687498357, 40.66995747013945]\"\n      [preserveDrawingBuffer]=\"true\"\n    >\n      <ng-container *ngIf=\"earthquakes\">\n        <mgl-geojson-source\n          #clusterComponent\n          id=\"earthquakes\"\n          [data]=\"earthquakes\"\n          [cluster]=\"true\"\n          [clusterRadius]=\"50\"\n          [clusterMaxZoom]=\"14\"\n        ></mgl-geojson-source>\n        <mgl-markers-for-clusters source=\"earthquakes\">\n          <ng-template mglPoint let-feature>\n            <div class=\"marker\" [title]=\"feature.properties['Secondary ID']\">\n              {{ feature.properties['Primary ID'] }}\n            </div>\n          </ng-template>\n          <ng-template mglClusterPoint let-feature>\n            <div\n              class=\"marker-cluster\"\n              (click)=\"selectCluster($event, feature)\"\n            >\n              {{ feature.properties?.point_count }}\n            </div>\n          </ng-template>\n        </mgl-markers-for-clusters>\n        <mgl-popup *ngIf=\"selectedCluster\" [feature]=\"selectedCluster\">\n          <showcase-cluster-popup\n            [clusterComponent]=\"clusterComponent\"\n            [selectedCluster]=\"selectedCluster\"\n          ></showcase-cluster-popup>\n        </mgl-popup>\n      </ng-container>\n    </mgl-map>\n  `,\n  styleUrls: ['./examples.css', './ngx-cluster-html.component.css'],\n  standalone: true,\n  imports: [\n    MapComponent,\n    NgIf,\n    GeoJSONSourceComponent,\n    MarkersForClustersComponent,\n    PointDirective,\n    ClusterPointDirective,\n    PopupComponent,\n    ClusterPopupComponent,\n  ],\n})\nexport class NgxClusterHtmlComponent implements OnDestroy {\n  earthquakes: GeoJSON.FeatureCollection;\n  selectedCluster: { geometry: GeoJSON.Point; properties: any };\n  timer: ReturnType<typeof setInterval>;\n\n  constructor() {\n    afterNextRender(async () => {\n      const earthquakes: GeoJSON.FeatureCollection = (await import(\n        './earthquakes.geo.json'\n      )) as any;\n      this.timer = setInterval(() => {\n        if (earthquakes.features.length) {\n          earthquakes.features.pop();\n        }\n        this.earthquakes = { ...earthquakes };\n      }, 500);\n    });\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.timer);\n  }\n\n  selectCluster(event: MouseEvent, feature: any) {\n    event.stopPropagation(); // This is needed, otherwise the popup will close immediately\n    // Change the ref, to trigger mgl-popup onChanges (when the user click on the same cluster)\n    this.selectedCluster = {\n      geometry: feature.geometry,\n      properties: feature.properties,\n    };\n  }\n}\n"],"mappings":"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","names":["_c0","SCROLL_THROTTLE_MS","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","SCROLL_THROTTLE_MS","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","MatTooltip","_MatTooltip","value","coerceBooleanProperty","coerceNumberProperty","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","TooltipComponent","Subject","takeUntil","origin","nativeElement","event","listener","delay","overlayRef","ComponentPortal","instance","existingStrategy","ElementRef","scrollableAncestors","strategy","change","hasModifierKey","position","overlay","__spreadValues","offset","isLtr","originPosition","x","y","overlayPosition","take","tooltipClass","connectionPair","overlayY","originX","originY","newPosition","classPrefix","point","touch","DEFAULT_LONGPRESS_DELAY","exitListeners","newTarget","touchendListener","listeners","elementUnderPointer","element","gestures","style","t","ɵɵdirectiveInject","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","MAT_TOOLTIP_SCROLL_STRATEGY","Directionality","MAT_TOOLTIP_DEFAULT_OPTIONS","DOCUMENT","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","InputFlags","_TooltipComponent","_changeDetectorRef","animationMode","relatedTarget","rect","animationName","toVisible","isVisible","tooltip","showClass","hideClass","styles","ChangeDetectorRef","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵstyleProp","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","NgClass","MatTooltipModule","_MatTooltipModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","A11yModule","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","MatPaginator_Conditional_2_Conditional_3_For_3_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","pageSizeOption_r3","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","MatPaginator_Conditional_2_Conditional_3_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","MatPaginator_Conditional_2_Conditional_4_Template","ɵɵtextInterpolate","MatPaginator_Conditional_2_Template","ɵɵtemplate","ɵɵattribute","ɵɵconditional","MatPaginator_Conditional_6_Template","_r4","ɵɵnamespaceSVG","ɵɵelement","MatPaginator_Conditional_13_Template","_r5","MatPaginatorIntl","_MatPaginatorIntl","Subject","page","pageSize","length","startIndex","endIndex","t","ɵɵdefineInjectable","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","DEFAULT_PAGE_SIZE","MAT_PAGINATOR_DEFAULT_OPTIONS","InjectionToken","nextUniqueId","MatPaginator","_MatPaginator","value","p","numberAttribute","_intl","_changeDetectorRef","defaults","ReplaySubject","EventEmitter","pageSize","pageSizeOptions","hidePageSize","showFirstLastButtons","previousPageIndex","maxPageIndex","startIndex","DEFAULT_PAGE_SIZE","a","b","t","ɵɵdirectiveInject","MatPaginatorIntl","ChangeDetectorRef","ɵɵdefineComponent","InputFlags","booleanAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵelementStart","ɵɵtemplate","MatPaginator_Conditional_2_Template","ɵɵtext","ɵɵelementEnd","MatPaginator_Conditional_6_Template","ɵɵlistener","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","MatPaginator_Conditional_13_Template","ɵɵadvance","ɵɵconditional","ɵɵtextInterpolate1","ɵɵproperty","ɵɵattribute","MatFormField","MatSelect","MatOption","MatIconButton","MatTooltip","MatPaginatorModule","_MatPaginatorModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_PAGINATOR_INTL_PROVIDER","MatButtonModule","MatSelectModule","MatTooltipModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","leaf_r1","properties","ɵɵproperty","feature_r1","ɵɵlistener","$event","feature_r3","ɵɵrestoreView","_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","selectCluster","point_count","ɵɵelement","selectedCluster","clusterComponent_r5","ɵɵelementContainerStart","ɵɵtemplate","NgxClusterHtmlComponent_ng_container_1_ng_template_4_Template","NgxClusterHtmlComponent_ng_container_1_ng_template_5_Template","NgxClusterHtmlComponent_ng_container_1_mgl_popup_6_Template","earthquakes","ClusterPopupComponent","ngOnChanges","changes","changePage","isFirstChange","paginator","firstPage","pageEvent","__async","offset","pageIndex","leaves","clusterComponent","getClusterLeaves","cluster_id","selectors","viewQuery","rf","ctx","MatPaginator","ClusterPopupComponent_mat_list_item_1_Template","MatListModule","MatList","MatListItem","NgFor","MatPaginatorModule","encapsulation","_ClusterPopupComponent","NgxClusterHtmlComponent","constructor","afterNextRender","timer","setInterval","features","length","pop","__spreadValues","ngOnDestroy","clearInterval","event","feature","stopPropagation","geometry","standalone","ɵɵStandaloneFeature","decls","vars","consts","template","NgxClusterHtmlComponent_ng_container_1_Template","ɵɵstyleMap","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c1","MapComponent","NgIf","GeoJSONSourceComponent","MarkersForClustersComponent","PointDirective","ClusterPointDirective","PopupComponent","styles","_NgxClusterHtmlComponent"],"x_google_ignoreList":[0,1]}